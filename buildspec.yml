version: 0.2

phases:
  pre_build:
    commands:
      - echo  Logging in to Amazon ECR ...
      - aws --version
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 605903052402.dkr.ecr.ap-northeast-1.amazonaws.com
      # 正式機
      # - REPOSITORY_URI_NGINX_PHP_FPM=177521679734.dkr.ecr.ap-northeast-1.amazonaws.com/nginx-php-fpm
      # 測試機
      - REPOSITORY_URI_NGINX_PHP_FPM=605903052402.dkr.ecr.ap-northeast-1.amazonaws.com/nginx-php-fpm
      - REPOSITORY_URI_WMS_BACKEND=605903052402.dkr.ecr.ap-northeast-1.amazonaws.com/wms-backend
      - IMAGE_TAG=latest
  build:
    commands:
      - echo Build started on `date`
      - echo Copy env from ssm
      - aws ssm get-parameter --with-decryption --name /backend/test/.common.env --output text --query 'Parameter.Value' > .common.env
      - aws ssm get-parameter --with-decryption --name /backend/test/.logistics.env --output text --query 'Parameter.Value' > .logistics.env
      - cat .common.env .logistics.env > .env
      - rm .common.env .logistics.env
      - echo install composer ...
      - composer install --ignore-platform-reqs
      - echo Building the docker image ...
      - docker build -t ${REPOSITORY_URI_NGINX_PHP_FPM}:latest --platform amd64 -f cloudbuild/Dockerfile .
      - docker tag ${REPOSITORY_URI_NGINX_PHP_FPM}:latest ${REPOSITORY_URI_WMS_BACKEND}:${IMAGE_TAG}
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image ...
      - docker image ls -a
      - docker push ${REPOSITORY_URI_WMS_BACKEND}:${IMAGE_TAG} 
